generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int          @id @default(autoincrement())
  email             String       @unique
  password          String
  role              Role
  confirmationToken String?      @unique
  isVerified        Boolean      @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assignments       Assignment[]
  coursesTaught     Course[]     @relation("LecturerCourses")
  enrollments       Enrollment[]
}

model Course {
  id          Int          @id @default(autoincrement())
  title       String
  credits     Int
  syllabus    String
  lecturerId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assignments Assignment[]
  lecturer    User         @relation("LecturerCourses", fields: [lecturerId], references: [id])
  enrollments Enrollment[]
}

model Enrollment {
  id        Int    @id @default(autoincrement())
  status    Status
  studentId Int
  courseId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course    Course @relation(fields: [courseId], references: [id])
  student   User   @relation(fields: [studentId], references: [id])
  @@unique([studentId, courseId])
}

model Assignment {
  id        Int    @id @default(autoincrement())
  file      String
  grade     Grade?
  studentId Int
  courseId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course    Course @relation(fields: [courseId], references: [id])
  student   User   @relation(fields: [studentId], references: [id])
}

enum Role {
  ADMIN
  LECTURER
  STUDENT
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum Grade {
  A  
  B
  C
  D
  E
  F                
}